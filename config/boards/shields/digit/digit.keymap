#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

&lt {
    tapping-term-ms = <150>;
    quick-tap-ms = <100>;
    flavor = "hold-preferred";
    };
&mt {
    tapping-term-ms = <150>;
    flavor = "hold-preferred";
    };
&sk {
    release-after-ms = <10000>;
    quick-release;
    };

#define arstneio 0
#define num 1
#define nav 2
#define vim 3
#define media 4 
#define blt 5
/ {
    combos {
            compatible ="zmk,combos";
            combo_num {
               timeout-ms = <30>;
               key-positions = <0 1 2 3>;
               bindings = <&to num>;
            };
            combo_nav {
               timeout-ms = <30>;
               key-positions = <4 5 6 7>;
               bindings = <&to nav>;
            };
            combo_vim {
               timeout-ms = <30>;
               key-positions = <3 5 6 >;
               bindings = <&to vim>;
            };
            combo_media {
               timeout-ms = <30>;
               key-positions = <0 1 2 3 4 5 6 7 8 9 0>;
               bindings = <&to media>;
            };
               combo_blt {
               timeout-ms = <30>;
               key-positions = <3 4 8 9>;
               bindings = <&to blt>;
            };
            
            combo_ent {
               timeout-ms = <30>;
               key-positions = <8 9>;
               bindings = <&mt ENT ESC>;
            };
             combo_alt {
               timeout-ms = <30>;
               key-positions = <0 3 8>;
               bindings = <&kt LALT>;
            };
             combo_back {
               timeout-ms = <30>;
               key-positions = <0 7>;
               bindings = <&kp BSPC>;
            };
              combo_rst {
               timeout-ms = <30>;
               key-positions = <0 1 2 3 4 5 6  7>;
               bindings = <&reset>;
            };
              combo_bsword {
               timeout-ms = <30>;
               key-positions = <0 7 9>;
               bindings = <&kp LC(BSPC)>;
            };
            combo_ctrl {
               timeout-ms = <30>;
               key-positions = <1 3 8>;
               bindings = <&kt LCTRL>;
            };
               combo_tab {
               timeout-ms = <30>;
               key-positions = <2 3 8>;
               bindings = <&kp TAB>;
            };
               combo_win {
               timeout-ms = <30>;
               key-positions = <0 1 8>;
               bindings = <&kp LGUI>;
            };
               string_sim {
               timeout-ms = <60>;
               key-positions = <2 4 6>;
               layers = <arstneio, vim>;
               bindings = <&string_sim>;
            };
    };

    behaviors {
            ZMK_MACRO(string_sim,
             wait-ms = <30>;
             tap-ms = <35>;
             bindings =<&kp S &kp I &kp M &kp U &kp L &kp A &kp T &kp I &kp O &kp N>;
             )
            };
    keymap {
             compatible = "zmk,keymap";

             arstneio {
             bindings = < 
             &kp A &kp R &kp S  &kp T  &kp N &kp E  &kp I  &kp O
                                &lt nav SPACE &sk LSHIFT
             >;
             };
             num {
             bindings = <
             &kp N1 &kp N2 &kp N3 &kp N4 &kp N5 &kp N6 &kp N7 &kp N8
                                   &trans &trans
            >;
            };
            nav {
            bindings = <
            &none &none &none &none &kp LEFT &kp UP &kp DOWN &kp right
                               &trans &trans
            >;
            };
            media {
            bindings = <
            &none &none &none &none &kp C_PREV &kp C_VOLUME_UP &kp C_VOLUME_DOWN &kp C_NEXT
                              &none &none
            >;
            blt {
            bindings = <
            &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_PRV &none
                              &none &none
            >;
            };
            };
     };   
